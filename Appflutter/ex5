import 'package:flutter/material.dart';

void main() {
  runApp(const MaterialApp(
    home: ListaTarefas(),
    debugShowCheckedModeBanner: false,
    title: 'Lista interativa',
  ));
}

class ListaTarefas extends StatefulWidget {
  const ListaTarefas({super.key});

  @override
  State<ListaTarefas> createState() => _ListaTarefasState();
}

class _ListaTarefasState extends State<ListaTarefas> {
  final List<Map<String, dynamic>> tarefas = [];
  final TextEditingController controlador = TextEditingController();

  void adicionarTarefa() {
    if (controlador.text.trim().isEmpty) return;

    setState(() {
      tarefas.add({"titulo": controlador.text, "concluida": false});
      controlador.clear();
    });
  }

  void alternarStatus(int index) {
    setState(() {
      tarefas[index]["concluida"] = !tarefas[index]["concluida"];
    });
  }

  void removerTarefa(int index) {
    setState(() {
      tarefas.removeAt(index);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Lista de Tarefas')),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          children: [
            Row(
              children: [
                Expanded(
                  child: TextField(
                    controller: controlador,
                    decoration: const InputDecoration(
                      labelText: 'Nova tarefa',
                      border: OutlineInputBorder(),
                    ),
                  ),
                ),
                const SizedBox(width: 10),
                ElevatedButton(
                  onPressed: adicionarTarefa,
                  child: const Text('Adicionar'),
                ),
              ],
            ),
            const SizedBox(height: 20),
            Expanded(
              child: ListView.builder(
                itemCount: tarefas.length,
                itemBuilder: (context, index) {
                  final tarefa = tarefas[index];
                  return Dismissible(
                    key: UniqueKey(),
                    direction: DismissDirection.endToStart,
                    background: Container(
                      color: Colors.red,
                      alignment: Alignment.centerRight,
                      padding: const EdgeInsets.symmetric(horizontal: 20),
                      child: const Icon(Icons.delete, color: Colors.white),
                    ),
                    onDismissed: (_) => removerTarefa(index),
                    child: CheckboxListTile(
                      title: Text(
                        tarefa["titulo"],
                        style: TextStyle(
                          decoration: tarefa["concluida"]
                              ? TextDecoration.lineThrough
                              : TextDecoration.none,
                        ),
                      ),
                      value: tarefa["concluida"],
                      onChanged: (_) => alternarStatus(index),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
